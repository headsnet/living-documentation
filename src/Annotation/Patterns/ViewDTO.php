<?php
declare(strict_types=1);

namespace Headsnet\LivingDocumentation\Annotation\Patterns;

use Headsnet\LivingDocumentation\Annotation\Traits\ImmutableTrait;

/**
 * A DTO class is a simple object containing primitive properties
 * used to transfer data between applications or application layers.
 *
 * View DTO's are generated by the application layer to send data to
 * the view layer (the web interface), without exposing domain objects
 * to the higher layer. Often they are simplified representations of
 * the domain object, containing only the data needed for a specific
 * view.
 *
 * @see https://en.wikipedia.org/wiki/Data_transfer_object
 *
 * @Annotation
 * @Target({"CLASS"})
 */
#[\Attribute(\Attribute::TARGET_CLASS)]
final class ViewDTO
{
    use ImmutableTrait;

    public function __construct(bool $immutable = false)
    {
        $this->immutable = $immutable;
    }
}
